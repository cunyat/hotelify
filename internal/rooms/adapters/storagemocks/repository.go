// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package storagemocks

import (
	context "context"

	room "github.com/cunyat/hotelify/internal/rooms/domain/room"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *Repository) Get(_a0 context.Context, _a1 string) (room.Room, error) {
	ret := _m.Called(_a0, _a1)

	var r0 room.Room
	if rf, ok := ret.Get(0).(func(context.Context, string) room.Room); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(room.Room)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0, _a1
func (_m *Repository) Save(_a0 context.Context, _a1 room.Room) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, room.Room) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Search provides a mock function with given fields: _a0
func (_m *Repository) Search(_a0 context.Context) []room.Room {
	ret := _m.Called(_a0)

	var r0 []room.Room
	if rf, ok := ret.Get(0).(func(context.Context) []room.Room); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]room.Room)
		}
	}

	return r0
}
